services:
  mkcert:
    container_name: mkcert
    image: vishnunair/docker-mkcert
    restart: always
    labels:
      - traefik.enable=false
    environment:
      - domain=*.localhost
    volumes:
      - mkcert-data:/root/.local/share/mkcert
    networks:
      - proxy
  
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.service=traefik@docker
      - traefik.http.routers.traefik.tls=true
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik.yml:/etc/traefik/traefik.yml
      - ./config/dynamic.yml:/etc/traefik/dynamic.yml
      - mkcert-data:/etc/certs
    networks:
      - proxy

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.localhost`)
      - traefik.http.routers.portainer.entrypoints=websecure
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      - traefik.http.routers.portainer.tls=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - proxy

networks:
  proxy:
    external: true

volumes:
  portainer_data:
  mkcert-data: